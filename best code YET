<script>
  // URL of the JSON file
  const dataJsonUrl = 'https://raw.githubusercontent.com/hthmark/BB-Test/refs/heads/main/newbb.json';

  async function fetchData() {
      try {
          const response = await fetch(dataJsonUrl);
          if (!response.ok) {
              throw new Error('Network response was not ok: ' + response.statusText);
          }
          const data = await response.json();
          populateStates(data);
          populateIndustries(data);
          populateCommission();
          populateTerritoryInheritance();
      } catch (error) {
          console.error('Error fetching JSON:', error);
      }
  }

  function populateStates(data) {
      const stateSelect = document.getElementById('state-select');
      const states = [...new Set(data.map(item => item.State))];

      stateSelect.innerHTML = ''; // Clear existing options
      const defaultOption = document.createElement('option');
      defaultOption.textContent = 'Select a state';
      defaultOption.disabled = true;
      defaultOption.selected = true;
      stateSelect.appendChild(defaultOption);

      states.forEach(state => {
          const option = document.createElement('option');
          option.value = state;
          option.textContent = state;
          stateSelect.appendChild(option);
      });

      stateSelect.addEventListener('change', () => {
          const selectedState = stateSelect.value;
          populateCounties(data, selectedState);
          updateResults(); // Update results when state changes
      });
  }

  function populateCounties(data, selectedState) {
      const countySelect = document.getElementById('county-select');
      const counties = [...new Set(data.filter(item => item.State === selectedState).map(item => item.County))];

      countySelect.innerHTML = ''; // Clear existing options
      const defaultOption = document.createElement('option');
      defaultOption.textContent = 'Select a county';
      defaultOption.disabled = true;
      defaultOption.selected = true;
      countySelect.appendChild(defaultOption);

      counties.forEach(county => {
          const option = document.createElement('option');
          option.value = county;
          option.textContent = county;
          countySelect.appendChild(option);
      });

      countySelect.addEventListener('change', () => {
          const selectedCounty = countySelect.value;
          displayPopulation(data, selectedState, selectedCounty);
          updateRevenue(); // Update revenue when county changes
      });
  }

  function populateIndustries(data) {
      const industrySelect = document.getElementById('industry-select');
      const industries = [...new Set(data.map(item => item.Industry))];

      industrySelect.innerHTML = ''; // Clear existing options
      const defaultOption = document.createElement('option');
      defaultOption.textContent = 'Select an industry';
      defaultOption.disabled = true;
      defaultOption.selected = true;
      industrySelect.appendChild(defaultOption);

      industries.forEach(industry => {
          const option = document.createElement('option');
          option.value = industry;
          option.textContent = industry;
          industrySelect.appendChild(option);
      });

      industrySelect.addEventListener('change', updateRevenue); // Update revenue when industry changes
  }

  function populateCommission() {
      const commissionSelect = document.getElementById('commission-select');
      commissionSelect.innerHTML = ''; // Clear existing options
      const defaultOption = document.createElement('option');
      defaultOption.textContent = 'Select a commission';
      defaultOption.disabled = true;
      defaultOption.selected = true;
      commissionSelect.appendChild(defaultOption);

      for (let i = 1; i <= 25; i++) {
          const option = document.createElement('option');
          option.value = i;
          option.textContent = `${i}%`;
          commissionSelect.appendChild(option);
      }

      commissionSelect.addEventListener('change', updateRevenue); // Update revenue when commission changes
  }

  function populateTerritoryInheritance() {
      const territorySelect = document.getElementById('territory-inheritance-select');
      const options = ['New', 'Mixed', 'Established'];

      territorySelect.innerHTML = ''; // Clear existing options
      const defaultOption = document.createElement('option');
      defaultOption.textContent = 'Select Territory Inheritance';
      defaultOption.disabled = true;
      defaultOption.selected = true;
      territorySelect.appendChild(defaultOption);

      options.forEach(option => {
          const newOption = document.createElement('option');
          newOption.value = option.toLowerCase();
          newOption.textContent = option;
          territorySelect.appendChild(newOption);
      });

      territorySelect.addEventListener('change', updateRevenue); // Update revenue on change
  }

  function displayPopulation(data, selectedState, selectedCounty) {
      const populationDisplay = document.getElementById('population-display');
      const populationData = data.find(item => item.State === selectedState && item.County === selectedCounty);

      if (populationData) {
          populationDisplay.textContent = `Population: ${populationData.Population}`;
          populationDisplay.dataset.population = populationData.Population; // Store population for later use
      } else {
          populationDisplay.textContent = 'Population: N/A';
      }
  }

  function formatCurrency(value) {
      const parts = value.toFixed(2).split('.');
      parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      return `$${parts.join('.')}`;
  }

  function updateRevenue() {
      const populationDisplay = document.getElementById('population-display');
      const population = parseInt(populationDisplay.dataset.population) || 0;

      const industrySelect = document.getElementById('industry-select');
      const selectedIndustry = industrySelect.value;

      let totalRevenue = 0;

      const industryMultipliers = {
          "Cardiology Devices": 76.94,
          "Dental Devices": 22.10,
          "Diabetes Care Devices": 34.96,
          "Diagnostic Imaging Devices": 35.62,
          "Drug Delivery Devices": 44.82,
          "Endoscopic Devices": 31.02,
          "General & Plastic Surgery Devices": 29.38,
          "Ophthalmic Devices": 41.80,
          "Orthopedic Devices": 47.83,
          "Other Medical Devices": 35.62
      };

      if (industryMultipliers[selectedIndustry]) {
          totalRevenue = population * industryMultipliers[selectedIndustry];
      }

      const commissionSelect = document.getElementById('commission-select');
      const commissionPercentage = parseInt(commissionSelect.value) || 0;
      const commissionMultiplier = commissionPercentage / 100;

      const finalRevenue = totalRevenue * commissionMultiplier;

      // Final step: Adjust based on territory selection
      const territorySelect = document.getElementById('territory-inheritance-select');
      const selectedTerritory = territorySelect.value;

      let adjustedFinalRevenue = finalRevenue; // Start with final revenue
      if (selectedTerritory === "new") {
          adjustedFinalRevenue *= 0.025; // Adjust for "New"
      } else if (selectedTerritory === "mixed") {
          adjustedFinalRevenue *= 0.04; // Adjust for "Mixed"
      } else if (selectedTerritory === "established") {
          adjustedFinalRevenue *= 0.07; // Adjust for "Established"
      }

      const adjustedFinalRevenueDisplay = document.getElementById('adjusted-final-revenue-display');
      adjustedFinalRevenueDisplay.textContent = `Adjusted Final Revenue: ${formatCurrency(adjustedFinalRevenue)}`;
      adjustedFinalRevenueDisplay.style.display = 'block';
  }

  window.onload = () => {
      fetchData();
      document.getElementById('adjusted-final-revenue-display').style.display = 'none'; // Hide on initial load
  };
</script>


